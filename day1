{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0eb6074b-f46e-4877-a8fe-3dccbb7c014b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hello\n"
     ]
    }
   ],
   "source": [
    "print(\"hello\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "53921953-0b27-4252-8eaf-26b4354c9dc1",
   "metadata": {},
   "outputs": [],
   "source": [
    "a=20\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f1e72fa9-6261-47e6-b113-b40d2490df8f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "20\n"
     ]
    }
   ],
   "source": [
    "print(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "a7be8e59-70d7-493a-b75f-9a9fb08988bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "20"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d8c4e124-0cf9-4c67-9ed2-3ddc3f71fdbb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "value of a is 20\n"
     ]
    }
   ],
   "source": [
    "print(\"value of a is\",a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5657efcd-4958-4656-815e-c3c88aa826a4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sum of 20 and 20 is 40\n"
     ]
    }
   ],
   "source": [
    "a=20\n",
    "b=20\n",
    "c=a+b\n",
    "print(\"sum of {} and {} is {}\".format(a,b,c,))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f003b343-0138-4827-ab82-1214f578dad8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sum of 20 and 30 is 50\n"
     ]
    }
   ],
   "source": [
    "a=20\n",
    "b=30\n",
    "c=a+b\n",
    "print(\"sum of {0} and {1} is {2}\".format(a,b,c,))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "6003991e-7f28-43e6-a06e-fb6361df7e99",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "int"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=34\n",
    "type(a)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "540cbaf7-ac43-4429-9a0d-53ed6e9ede35",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "float"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=100.2\n",
    "type(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "1e6773e8-0d9f-4cbf-857c-edbb8a95c7f3",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'str' object is not callable",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[38], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m s \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mshiri\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m----> 2\u001b[0m \u001b[38;5;28mtype\u001b[39m(s)\n",
      "\u001b[1;31mTypeError\u001b[0m: 'str' object is not callable"
     ]
    }
   ],
   "source": [
    "s = \"shiri\"\n",
    "type(s)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "4faf13a2-4b5e-426c-b96c-e9599628b28f",
   "metadata": {},
   "outputs": [],
   "source": [
    "a=100\n",
    "b=str(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "a37b1231-cfa0-4963-ad76-260c8ec4dd2b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "100.0"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "float(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "28d671d4-2e0c-472b-a283-2f040fa940f3",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'str' object is not callable",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[44], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m a\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m40\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m----> 2\u001b[0m \u001b[38;5;28mtype\u001b[39m(a)\n",
      "\u001b[1;31mTypeError\u001b[0m: 'str' object is not callable"
     ]
    }
   ],
   "source": [
    "a=\"40\"\n",
    "type(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "77c962e1-930f-4ac8-8f5a-ed8e2853a7ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "20==30"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "cff7b64f-96e2-43e1-9659-c5c257e66032",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " 1\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ON\n"
     ]
    }
   ],
   "source": [
    "s=int(input())\n",
    "\n",
    "if s==1: \n",
    "    print(\"ON\")\n",
    "else:\n",
    "    print(\"off\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "2df58a8c-f6f2-4bc8-b6b7-7b2fe5779420",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " 1\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Value is 1\n"
     ]
    }
   ],
   "source": [
    "a = int(input())\n",
    "\n",
    "if  a == 1:\n",
    "    print(\"Value is 1\")\n",
    "elif a == 2:\n",
    "    print(\"Value is 2\")\n",
    "elif a == 3:\n",
    "    print(\"Value is 3\")\n",
    "else :\n",
    "    print(\"other\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ea22c22e-dbb4-4245-9732-324530f8e4c8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "560a9fe7-10a5-4782-ba79-aecc1aea63d0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " 2000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Amount from friend 2000\n",
      "Balance amount 3000\n"
     ]
    }
   ],
   "source": [
    "bill_amount = 5000\n",
    "\n",
    "friend = int(input())\n",
    "\n",
    "if friend >0:\n",
    "    print(\"Amount from friend\",friend)\n",
    "    if friend >= bill_amount:\n",
    "        print(\"Full bill paid\")\n",
    "    else:\n",
    "        balance = bill_amount - friend\n",
    "        print(\"Balance amount\",balance)\n",
    "\n",
    "else:\n",
    "    print(\"Full bill pending\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "12bab1f3-9aff-45b5-ad77-da77cff41d98",
   "metadata": {},
   "outputs": [],
   "source": [
    "a = \"Welcome to NCB\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "ecff3d8b-e014-4462-af61-e9ebab445254",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "14"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "da9b1cfa-1756-467e-a8c7-96e6d5ce6459",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'NC'"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a[-3:-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "cf4b0226-0006-4f6a-98c6-875f5690ffdc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " KA\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "open\n"
     ]
    }
   ],
   "source": [
    "n = input()\n",
    "\n",
    "a = n[0:2]\n",
    "\n",
    "if a == \"KA\":\n",
    "    print(\"open\")\n",
    "elif a == \"AP\":\n",
    "    print(\"open\")\n",
    "elif a == \"TN\":\n",
    "    print(\"open\")\n",
    "else:\n",
    "    print(\"close\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c883fdbe-8fe6-4c2b-921a-a0a9a2d86058",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "33699955-866b-43cf-b133-301dbd3fbc41",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
